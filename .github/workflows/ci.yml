name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POETRY_VERSION: 1.8.3
  PYTHON_VERSION: 3.10.14

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pypoetry
          .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci.yml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
          
    - name: Install Poetry
      run: |
        pip install poetry==${{ env.POETRY_VERSION }}
        poetry config virtualenvs.in-project true
        poetry config cache-dir ~/.cache/pypoetry
        
    - name: Install dependencies
      run: |
        poetry install --with lint
        
    - name: Export requirements
      run: |
        poetry export -f requirements.txt --output requirements.txt --without-hashes
        
    - name: Run linting
      run: |
        poetry run ruff check

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/.cache/pypoetry
          .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/ci.yml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
          
    - name: Install Poetry
      run: |
        pip install poetry==${{ env.POETRY_VERSION }}
        poetry config virtualenvs.in-project true
        poetry config cache-dir ~/.cache/pypoetry
        
    - name: Install dependencies
      run: |
        poetry install --with test
        
    - name: Export requirements
      run: |
        poetry export -f requirements.txt --output requirements.txt --without-hashes
        
    - name: Run tests
      run: |
        poetry run pytest